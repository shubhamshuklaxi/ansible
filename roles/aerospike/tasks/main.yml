- name: debian os update and upgrade
  apt:
    upgrade: yes
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 36000
  become: true

    
- name: coping config file
  template:
    src: "{{aerospike_template_file}}"
    dest: /etc/aerospike/aerospike.conf
    #         owner: root
    #         group: root
    #         mode: 0644
  become: true

    #- name: Adding host entries for fleet server
    #  ansible.builtin.shell:
    #    cmd: "echo '192.168.64.14 server1.fleet.local' >> /etc/hosts"
    #  ignore_errors: yes
    #  become: true

    #- name: Downloading aerospike packages
    #  ansible.builtin.get_url:
    #    url: https://dl.aerospike.com/artifacts/aerospike-server-community/8.0.0/aerospike-server-community_8.0.0.8_tools-11.2.2_ubuntu22.04_aarch64.tgz
    #    dest: /home/ubuntu/
    #  become: true
    #
    #- name: Extracting aerospike-server-community_8.0.0.8_tools-11.2.2_ubuntu22.04_aarch64.tgz
    #  ansible.builtin.unarchive:
    #    src: /home/ubuntu/aerospike-server-community_8.0.0.8_tools-11.2.2_ubuntu22.04_aarch64.tgz
    #    dest: /home/ubuntu/
    #    remote_src: yes
    #  become: true

    #- name: "coping fleetctl file in /usr/bin/"
    #  copy:
    #        src: /home/ubuntu/fleetctl_v4.69.0_linux_arm64/fleetctl
    #        dest: /usr/bin
    #        owner: root
    #        group: root
    #        mode: 0755
    #        remote_src: yes
    #  become: true

    #- name:  Installing Aerospike
    #  ansible.builtin.shell:
    #    cmd: "cd aero*/ && sudo ./asinstall"
    #  ignore_errors: yes
    #  become: true

    #- name: enabling aerospike service
    #  ansible.builtin.shell:
    #    cmd: "sudo systemctl enable --now aerospike.service"
    #  ignore_errors: true
    #  become: true
    #
- name: restarting aerospike
  shell:
    cmd: "sudo systemctl restart aerospike.service"
  ignore_errors: true
  become: true

